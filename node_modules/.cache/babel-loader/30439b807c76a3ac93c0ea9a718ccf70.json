{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\WeatherSearch.js\";\nimport React, { Component } from 'react';\nimport * as opencage from 'opencage-api-client';\nimport PropTypes from 'prop-types';\nimport { InputText } from 'primereact/inputtext';\nimport { Button } from 'primereact/button';\n\nvar WeatherSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherSearch, _Component);\n\n  function WeatherSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      latitude: 12.9791198,\n      longitude: 77.5912997,\n      place: 'Bengaluru, India'\n    };\n\n    _this.onSearch = function (e) {\n      opencage.geocode({\n        q: _this.state.place,\n        key: process.env.REACT_APP_OPENCAGE_KEY\n      }).then(function (data) {\n        // console.log(JSON.stringify(data));\n        if (data.status.code === 200) {\n          if (data.results.length > 0) {\n            var place = data.results[0]; // console.log(place.formatted);\n\n            _this.setState({\n              latitude: place.geometry.lat,\n              longitude: place.geometry.lng\n            }); // console.log('geocode',this.state, place.geometry);\n\n\n            _this.props.toggleLoading();\n\n            _this.props.performSearch(_this.state.latitude, _this.state.longitude); // console.log(place.annotations.timezone.name);\n\n          }\n        } else if (data.status.code === 402) {\n          console.log('hit free-trial daily limit');\n          console.log('become a customer: https://opencagedata.com/pricing');\n        } else {\n          // other possible response codes:\n          // https://opencagedata.com/api#codes\n          console.log('error', data.status.message);\n        }\n      }).catch(function (error) {\n        console.log('error', error.message);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(WeatherSearch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isLoaded) {\n        this.onSearch();\n      }\n\n      ;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          maxWidth: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(InputText, {\n        style: {\n          flex: '3'\n        },\n        placeholder: \"Enter Place Name\",\n        id: \"place\",\n        value: this.state.place,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            place: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          flex: '2'\n        },\n        label: \"Get Weather\",\n        onClick: this.onSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WeatherSearch;\n}(Component);\n\nexport { WeatherSearch as default };\nWeatherSearch.propTypes = {\n  performSearch: PropTypes.func.isRequired,\n  toggleLoading: PropTypes.func.isRequired,\n  isLoaded: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\WeatherSearch.js"],"names":["React","Component","opencage","PropTypes","InputText","Button","WeatherSearch","state","latitude","longitude","place","onSearch","e","geocode","q","key","process","env","REACT_APP_OPENCAGE_KEY","then","data","status","code","results","length","setState","geometry","lat","lng","props","toggleLoading","performSearch","console","log","message","catch","error","isLoaded","display","justifyContent","maxWidth","flex","target","value","propTypes","func","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,MAAR,QAAqB,mBAArB;;IAEqBC,a;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,UADN;AAEJC,MAAAA,SAAS,EAAE,UAFP;AAGJC,MAAAA,KAAK,EAAC;AAHF,K;;UAMRC,Q,GAAW,UAACC,CAAD,EAAO;AACdV,MAAAA,QAAQ,CAACW,OAAT,CAAiB;AAACC,QAAAA,CAAC,EAAE,MAAKP,KAAL,CAAWG,KAAf;AAAsBK,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAvC,OAAjB,EAAiFC,IAAjF,CAAsF,UAAAC,IAAI,EAAI;AAC1F;AACA,YAAIA,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,GAAzB,EAA8B;AAC5B,cAAIF,IAAI,CAACG,OAAL,CAAaC,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,gBAAId,KAAK,GAAGU,IAAI,CAACG,OAAL,CAAa,CAAb,CAAZ,CAD2B,CAE3B;;AACA,kBAAKE,QAAL,CAAc;AAAEjB,cAAAA,QAAQ,EAAEE,KAAK,CAACgB,QAAN,CAAeC,GAA3B;AAAgClB,cAAAA,SAAS,EAAEC,KAAK,CAACgB,QAAN,CAAeE;AAA1D,aAAd,EAH2B,CAI3B;;;AACA,kBAAKC,KAAL,CAAWC,aAAX;;AACA,kBAAKD,KAAL,CAAWE,aAAX,CAAyB,MAAKxB,KAAL,CAAWC,QAApC,EAA8C,MAAKD,KAAL,CAAWE,SAAzD,EAN2B,CAO3B;;AACD;AACF,SAVD,MAUO,IAAIW,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,GAAzB,EAA8B;AACnCU,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACD,SAHM,MAGA;AACL;AACA;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBb,IAAI,CAACC,MAAL,CAAYa,OAAjC;AACD;AACF,OApBH,EAoBKC,KApBL,CAoBW,UAAAC,KAAK,EAAI;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAAK,CAACF,OAA3B;AACD,OAtBH;AAuBH,K;;;;;;;wCAEmB;AAClB,UAAG,CAAC,KAAKL,KAAL,CAAWQ,QAAf,EAAyB;AAAC,aAAK1B,QAAL;AAAgB;;AAAA;AAC3C;;;6BAEQ;AAAA;;AACT,aACI;AAAK,QAAA,KAAK,EAAE;AAAE2B,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE,QAAnC;AAA6CC,UAAAA,QAAQ,EAAE;AAAvD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,SAAD;AACM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SADb;AAEM,QAAA,WAAW,EAAC,kBAFlB;AAGM,QAAA,EAAE,EAAC,OAHT;AAIM,QAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWG,KAJxB;AAKM,QAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,iBAAO,MAAI,CAACa,QAAL,CAAc;AAACf,YAAAA,KAAK,EAAEE,CAAC,CAAC8B,MAAF,CAASC;AAAjB,WAAd,CAAP;AAAA,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAWA,oBAAC,MAAD;AACM,QAAA,KAAK,EAAE;AAACF,UAAAA,IAAI,EAAE;AAAP,SADb;AAEM,QAAA,KAAK,EAAC,aAFZ;AAGM,QAAA,OAAO,EAAE,KAAK9B,QAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXA,CADJ;AAkBD;;;;EAxDwCV,S;;SAAtBK,a;AA2DrBA,aAAa,CAACsC,SAAd,GAA0B;AACxBb,EAAAA,aAAa,EAAE5B,SAAS,CAAC0C,IAAV,CAAeC,UADN;AAExBhB,EAAAA,aAAa,EAAE3B,SAAS,CAAC0C,IAAV,CAAeC,UAFN;AAGxBT,EAAAA,QAAQ,EAAElC,SAAS,CAAC4C,IAAV,CAAeD;AAHD,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport * as opencage from 'opencage-api-client';\r\nimport PropTypes from 'prop-types';\r\nimport {InputText} from 'primereact/inputtext';\r\nimport {Button} from 'primereact/button';\r\n\r\nexport default class WeatherSearch extends Component {\r\n    state = { \r\n        latitude: 12.9791198,\r\n        longitude: 77.5912997,\r\n        place:'Bengaluru, India'\r\n    };\r\n\r\n    onSearch = (e) => {\r\n        opencage.geocode({q: this.state.place, key: process.env.REACT_APP_OPENCAGE_KEY}).then(data => {\r\n            // console.log(JSON.stringify(data));\r\n            if (data.status.code === 200) {\r\n              if (data.results.length > 0) {\r\n                var place = data.results[0];\r\n                // console.log(place.formatted);\r\n                this.setState({ latitude: place.geometry.lat, longitude: place.geometry.lng  });\r\n                // console.log('geocode',this.state, place.geometry);\r\n                this.props.toggleLoading();\r\n                this.props.performSearch(this.state.latitude, this.state.longitude);\r\n                // console.log(place.annotations.timezone.name);\r\n              }\r\n            } else if (data.status.code === 402) {\r\n              console.log('hit free-trial daily limit');\r\n              console.log('become a customer: https://opencagedata.com/pricing'); \r\n            } else {\r\n              // other possible response codes:\r\n              // https://opencagedata.com/api#codes\r\n              console.log('error', data.status.message);\r\n            }\r\n          }).catch(error => {\r\n            console.log('error', error.message);\r\n          });\r\n    }\r\n\r\n    componentDidMount() {\r\n      if(!this.props.isLoaded) {this.onSearch()};\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', maxWidth: '400px' }} >\r\n        {/* <span className=\"p-float-label\"   > */}\r\n        <InputText \r\n              style={{flex: '3'}}\r\n              placeholder=\"Enter Place Name\" \r\n              id=\"place\"\r\n              value={this.state.place} \r\n              onChange={(e) => this.setState({place: e.target.value})}    \r\n              />\r\n              {/* <label htmlFor=\"place\">Enter Place Name</label>\r\n        </span> */}\r\n        <Button \r\n              style={{flex: '2'}}\r\n              label=\"Get Weather\" \r\n              onClick={this.onSearch} />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nWeatherSearch.propTypes = {\r\n  performSearch: PropTypes.func.isRequired,\r\n  toggleLoading: PropTypes.func.isRequired,\r\n  isLoaded: PropTypes.bool.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}