{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primereact/resources/themes/nova-colored/theme.css\";\nimport \"primeicons/primeicons.css\";\nimport \"./App.css\";\nimport WeatherTabs from \"./components/layout/WeatherTabs\"; // import Moment from 'react-moment';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      weather: {},\n      viewport: {\n        latitude: 12.9791198,\n        longitude: 77.5912997,\n        zoom: 11,\n        pitch: 0,\n        bearing: 0\n      },\n      isLoaded: false,\n      isLoading: false\n    };\n\n    _this.toggleLoading = function () {\n      return _this.setState({\n        isLoading: !_this.state.isLoading\n      });\n    };\n\n    _this.setViewport = function (viewport) {\n      _this.setState(_objectSpread({}, _this.state, {\n        viewport: viewport\n      })); // console.log('set viewport in app js', this.state);\n\n    };\n\n    _this.performSearch = function (lat, lon) {\n      var exclude = \"[minutely,hourly,flags]\";\n      var api = \"https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/\".concat(process.env.REACT_APP_DARKSKY_KEY, \"/\").concat(lat, \",\").concat(lon, \"?units=ca&exclude=\").concat(exclude);\n      axios.get(api).then(function (res) {\n        // console.log('weather data', res.data);\n        return _this.setState({\n          weather: res.data,\n          viewport: _objectSpread({}, _this.state.viewport, {\n            latitude: res.data.latitude,\n            longitude: res.data.longitude,\n            zoom: 11\n          }),\n          isLoaded: true,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"App State\", this.state);\n      return React.createElement(\"div\", {\n        className: \"Container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(WeatherTabs, {\n        weatherState: this.state,\n        performSearch: this.performSearch,\n        toggleLoading: this.toggleLoading,\n        setViewport: this.setViewport,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\App.js"],"names":["React","Component","axios","WeatherTabs","App","state","weather","viewport","latitude","longitude","zoom","pitch","bearing","isLoaded","isLoading","toggleLoading","setState","setViewport","performSearch","lat","lon","exclude","api","process","env","REACT_APP_DARKSKY_KEY","get","then","res","data","catch","error","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,yCAAP;AACA,OAAO,oDAAP;AACA,OAAO,2BAAP;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CACA;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,UADF;AAERC,QAAAA,SAAS,EAAE,UAFH;AAGRC,QAAAA,IAAI,EAAE,EAHE;AAIRC,QAAAA,KAAK,EAAE,CAJC;AAKRC,QAAAA,OAAO,EAAE;AALD,OAFJ;AASNC,MAAAA,QAAQ,EAAE,KATJ;AAUNC,MAAAA,SAAS,EAAE;AAVL,K;;UAaRC,a,GAAgB;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE,CAAC,MAAKT,KAAL,CAAWS;AAAzB,OAAd,CAAN;AAAA,K;;UAEhBG,W,GAAc,UAAAV,QAAQ,EAAI;AACxB,YAAKS,QAAL,mBAAmB,MAAKX,KAAxB;AAA+BE,QAAAA,QAAQ,EAAEA;AAAzC,UADwB,CAExB;;AACD,K;;UAEDW,a,GAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,UAAMC,OAAO,GAAG,yBAAhB;AACA,UAAMC,GAAG,kFACPC,OAAO,CAACC,GAAR,CAAYC,qBADL,cAELN,GAFK,cAEEC,GAFF,+BAE0BC,OAF1B,CAAT;AAGAnB,MAAAA,KAAK,CACFwB,GADH,CACOJ,GADP,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX;AACA,eAAO,MAAKZ,QAAL,CAAc;AACnBV,UAAAA,OAAO,EAAEsB,GAAG,CAACC,IADM;AAEnBtB,UAAAA,QAAQ,oBACH,MAAKF,KAAL,CAAWE,QADR;AAENC,YAAAA,QAAQ,EAAEoB,GAAG,CAACC,IAAJ,CAASrB,QAFb;AAGNC,YAAAA,SAAS,EAAEmB,GAAG,CAACC,IAAJ,CAASpB,SAHd;AAINC,YAAAA,IAAI,EAAE;AAJA,YAFW;AAQnBG,UAAAA,QAAQ,EAAE,IARS;AASnBC,UAAAA,SAAS,EAAE;AATQ,SAAd,CAAP;AAWD,OAfH,EAgBGgB,KAhBH,CAgBS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAlBH;AAmBD,K;;;;;;;6BAEQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAK5B,KAA9B;AACA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,YAAY,EAAE,KAAKA,KADrB;AAEE,QAAA,aAAa,EAAE,KAAKa,aAFtB;AAGE,QAAA,aAAa,EAAE,KAAKH,aAHtB;AAIE,QAAA,WAAW,EAAE,KAAKE,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;;;EA5DehB,S;;AA+DlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primereact/resources/themes/nova-colored/theme.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"./App.css\";\r\nimport WeatherTabs from \"./components/layout/WeatherTabs\";\r\n// import Moment from 'react-moment';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    weather: {},\r\n    viewport: {\r\n      latitude: 12.9791198,\r\n      longitude: 77.5912997,\r\n      zoom: 11,\r\n      pitch: 0,\r\n      bearing: 0\r\n    },\r\n    isLoaded: false,\r\n    isLoading: false\r\n  };\r\n\r\n  toggleLoading = () => this.setState({ isLoading: !this.state.isLoading });\r\n\r\n  setViewport = viewport => {\r\n    this.setState({ ...this.state, viewport: viewport });\r\n    // console.log('set viewport in app js', this.state);\r\n  };\r\n\r\n  performSearch = (lat, lon) => {\r\n    const exclude = \"[minutely,hourly,flags]\";\r\n    const api = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${\r\n      process.env.REACT_APP_DARKSKY_KEY\r\n    }/${lat},${lon}?units=ca&exclude=${exclude}`;\r\n    axios\r\n      .get(api)\r\n      .then(res => {\r\n        // console.log('weather data', res.data);\r\n        return this.setState({\r\n          weather: res.data,\r\n          viewport: {\r\n            ...this.state.viewport,\r\n            latitude: res.data.latitude,\r\n            longitude: res.data.longitude,\r\n            zoom: 11\r\n          },\r\n          isLoaded: true,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"App State\", this.state);\r\n    return (\r\n      <div className=\"Container\">\r\n        <WeatherTabs\r\n          weatherState={this.state}\r\n          performSearch={this.performSearch}\r\n          toggleLoading={this.toggleLoading}\r\n          setViewport={this.setViewport}\r\n        />\r\n        {/* <MapCard /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}