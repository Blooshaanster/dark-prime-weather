{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\MapCard.js\";\nimport React, { Component } from 'react';\nimport ReactMapGL from 'react-map-gl';\n\nvar MapCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapCard, _Component);\n\n  function MapCard() {\n    _classCallCheck(this, MapCard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MapCard).apply(this, arguments));\n  }\n\n  _createClass(MapCard, [{\n    key: \"render\",\n    //Update Viewport From Search Props(Geocoder)\n    // componentDidUpdate() {\n    //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \n    //       && !this.props.weatherState.isLoading\n    //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\n    //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\n    //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\n    //   } \n    // }\n    // //Update Viewport From Scroll\n    // setPosition(latitude, longitude) {\n    //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n    //   // this.props.setLatLon(latitude, longitude);\n    //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n    //   // console.log('updating viewport from prop', this.state, latitude, longitude)\n    // }\n    // setViewport(viewport) {\n    //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n    //   const { latitude, longitude } = viewport;\n    //   this.props.setLatLon(latitude, longitude);\n    //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n    //   // console.log('updating viewport from map', this.state, latitude, longitude)\n    // }\n    value: function render() {\n      var _this = this;\n\n      // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\n      // let { weather } = this.props.weatherState;\n      // if(this.props.weatherState.isLoaded) {\n      //   position = [weather.latitude, weather.longitude];\n      //   // this.setPosition(position[0], position[1]);\n      // } \n      return React.createElement(ReactMapGL, {\n        latitude: this.props.weatherState.viewport.latitude,\n        longitude: this.props.weatherState.viewport.longitude,\n        zoom: 10,\n        width: \"75vw\",\n        height: \"60vh\" // scrollZoom={true}\n        // interactive={true}\n        // dragPan={true}\n        ,\n        onViewportChange: function onViewportChange(viewport) {\n          return _this.props.setViewport(viewport);\n        },\n        mapStyle: \"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\",\n        mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_KEY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapCard;\n}(Component);\n\nexport { MapCard as default };","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\MapCard.js"],"names":["React","Component","ReactMapGL","MapCard","props","weatherState","viewport","latitude","longitude","setViewport","process","env","REACT_APP_MAPBOX_KEY"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEqBC,O;;;;;;;;;;;;;AACnB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;6BAEO;AAAA;;AACL;AACA;AACA;AACA;AACA;AACA;AACA,aACA,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCC,QAD7C;AAEE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,YAAX,CAAwBC,QAAxB,CAAiCE,SAF9C;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC,MALT,CAME;AACA;AACA;AARF;AASE,QAAA,gBAAgB,EAAE,0BAACF,QAAD;AAAA,iBAAc,KAAI,CAACF,KAAL,CAAWK,WAAX,CAAuBH,QAAvB,CAAd;AAAA,SATpB;AAUE,QAAA,QAAQ,EAAC,uDAVX;AAWE,QAAA,oBAAoB,EAAEI,OAAO,CAACC,GAAR,CAAYC,oBAXpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAwBF;;;;EA1DmCX,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactMapGL from 'react-map-gl';\r\n\r\nexport default class MapCard extends Component {\r\n  //Update Viewport From Search Props(Geocoder)\r\n  // componentDidUpdate() {\r\n  //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \r\n  //       && !this.props.weatherState.isLoading\r\n  //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\r\n      \r\n  //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\r\n  //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\r\n  //   } \r\n  // }\r\n  // //Update Viewport From Scroll\r\n  // setPosition(latitude, longitude) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   // this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from prop', this.state, latitude, longitude)\r\n  // }\r\n\r\n  // setViewport(viewport) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   const { latitude, longitude } = viewport;\r\n  //   this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from map', this.state, latitude, longitude)\r\n  // }\r\n    \r\n render(){ \r\n    // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\r\n    // let { weather } = this.props.weatherState;\r\n    // if(this.props.weatherState.isLoaded) {\r\n    //   position = [weather.latitude, weather.longitude];\r\n    //   // this.setPosition(position[0], position[1]);\r\n    // } \r\n    return (\r\n    <ReactMapGL\r\n      latitude={this.props.weatherState.viewport.latitude}\r\n      longitude={this.props.weatherState.viewport.longitude}\r\n      zoom={10}\r\n      width=\"75vw\"\r\n      height=\"60vh\"\r\n      // scrollZoom={true}\r\n      // interactive={true}\r\n      // dragPan={true}\r\n      onViewportChange={(viewport) => this.props.setViewport(viewport)}\r\n      mapStyle=\"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\"\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\r\n    >\r\n      {/* <Marker \r\n        latitude= {this.state.viewport.longitude}\r\n        longitude= {this.state.viewport.longitude}\r\n        draggable= {false}\r\n        offsetTop= {-25}\r\n      >\r\n        <img src=\"https://img.icons8.com/color/32/000000/marker.png\" alt=\"\"/>\r\n      </Marker> */}\r\n    </ReactMapGL>\r\n  )\r\n }\r\n}"]},"metadata":{},"sourceType":"module"}