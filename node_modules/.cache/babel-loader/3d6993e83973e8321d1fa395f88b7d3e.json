{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\WeatherDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactAnimatedWeather from 'react-animated-weather'; // import { Transition, animated } from 'react-spring/renderprops';\n// import {  CSSTransition, TransitionGroup  } from 'react-transition-group';\n// import './../../App.css';\n\nfunction WeatherDetail(_ref) {\n  var weatherState = _ref.weatherState;\n  var defaults = {\n    color: 'cadetblue',\n    size: 50,\n    animate: true\n  }; // const styleDetail={ \n  //   display : 'flex', \n  //   justifyContent: 'center', \n  //   alignItems: 'center', \n  //   textAlign: 'center', \n  //   minWidth: '300px', \n  //   minHeight: '100px' \n  // };\n\n  var _weatherState$weather = weatherState.weather.currently,\n      temperature = _weatherState$weather.temperature,\n      icon = _weatherState$weather.icon,\n      summary = _weatherState$weather.summary;\n  var isLoading = weatherState.isLoading,\n      isLoaded = weatherState.isLoaded;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, !isLoading && isLoaded ? React.createElement(\"div\", {\n    className: \"weather-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, Math.round(temperature), \"\\xB0C \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, summary), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ReactAnimatedWeather, {\n    icon: icon.replace(/-/g, \"_\").toUpperCase(),\n    color: defaults.color,\n    size: defaults.size,\n    animate: defaults.animate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    className: \"weather-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Loading...\")));\n} // PropTypes\n\n\nWeatherDetail.propTypes = {\n  weatherState: PropTypes.object.isRequired\n};\nexport default WeatherDetail;","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\WeatherDetail.js"],"names":["React","PropTypes","ReactAnimatedWeather","WeatherDetail","weatherState","defaults","color","size","animate","weather","currently","temperature","icon","summary","isLoading","isLoaded","Math","round","replace","toUpperCase","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CACA;AACA;AACA;;AACA,SAASC,aAAT,OAAuC;AAAA,MAAfC,YAAe,QAAfA,YAAe;AAEtC,MAAMC,QAAQ,GAAG;AACdC,IAAAA,KAAK,EAAE,WADO;AAEdC,IAAAA,IAAI,EAAE,EAFQ;AAGdC,IAAAA,OAAO,EAAE;AAHK,GAAjB,CAFsC,CAQrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfqC,8BAgBEJ,YAAY,CAACK,OAAb,CAAqBC,SAhBvB;AAAA,MAgB7BC,WAhB6B,yBAgB7BA,WAhB6B;AAAA,MAgBhBC,IAhBgB,yBAgBhBA,IAhBgB;AAAA,MAgBVC,OAhBU,yBAgBVA,OAhBU;AAAA,MAiB7BC,SAjB6B,GAiBLV,YAjBK,CAiB7BU,SAjB6B;AAAA,MAiBlBC,QAjBkB,GAiBLX,YAjBK,CAiBlBW,QAjBkB;AAkBnC,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACD,SAAD,IAAcC,QAAf,GACD;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,KAAL,CAAWN,WAAX,CAAP,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,OAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAED,IAAI,CAACM,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwBC,WAAxB,EADR;AAEE,IAAA,KAAK,EAAEd,QAAQ,CAACC,KAFlB;AAGE,IAAA,IAAI,EAAED,QAAQ,CAACE,IAHjB;AAIE,IAAA,OAAO,EAAEF,QAAQ,CAACG,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,CADC,GAaC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC,CAdJ,CADF;AAmBD,C,CAEH;;;AACAL,aAAa,CAACiB,SAAd,GAA0B;AACxBhB,EAAAA,YAAY,EAAEH,SAAS,CAACoB,MAAV,CAAiBC;AADP,CAA1B;AAIA,eAAenB,aAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n// import { Transition, animated } from 'react-spring/renderprops';\r\n// import {  CSSTransition, TransitionGroup  } from 'react-transition-group';\r\n// import './../../App.css';\r\nfunction WeatherDetail({weatherState}) {\r\n\r\n const defaults = {\r\n    color: 'cadetblue',\r\n    size: 50,\r\n    animate: true\r\n  };\r\n  \r\n  // const styleDetail={ \r\n  //   display : 'flex', \r\n  //   justifyContent: 'center', \r\n  //   alignItems: 'center', \r\n  //   textAlign: 'center', \r\n  //   minWidth: '300px', \r\n  //   minHeight: '100px' \r\n  // };\r\n  const { temperature, icon, summary } = weatherState.weather.currently;\r\n  const { isLoading, isLoaded } = weatherState;\r\n    return (    \r\n      <React.Fragment>\r\n        {(!isLoading && isLoaded) ?\r\n        <div className=\"weather-detail\">\r\n          <h3  >{Math.round(temperature)}Â°C </h3>\r\n          <h3  >{summary}</h3>\r\n          <div>\r\n            <ReactAnimatedWeather \r\n              icon={icon.replace(/-/g, \"_\").toUpperCase()}\r\n              color={defaults.color}\r\n              size={defaults.size}\r\n              animate={defaults.animate}\r\n            />\r\n          </div>\r\n        </div> \r\n        : <div className=\"weather-detail\"><h3>Loading...</h3></div>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n// PropTypes\r\nWeatherDetail.propTypes = {\r\n  weatherState: PropTypes.object.isRequired\r\n  }\r\n\r\nexport default WeatherDetail;"]},"metadata":{},"sourceType":"module"}