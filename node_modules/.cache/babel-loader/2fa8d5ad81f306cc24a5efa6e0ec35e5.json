{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\WeatherCard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // import { Spring, config  } from 'react-spring/renderprops'\n// import { Card } from 'primereact/card';\n\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherDetail from \"./WeatherDetail\";\nimport { Message } from \"primereact/message\";\nimport { Offline } from \"react-detect-offline\"; // import {Panel} from 'primereact/panel';\n\nfunction WeatherCard(_ref) {\n  var weatherState = _ref.weatherState,\n      performSearch = _ref.performSearch,\n      toggleLoading = _ref.toggleLoading;\n  return React.createElement(\"div\", {\n    className: \"weather-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Offline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Message, {\n    severity: \"warn\",\n    text: \"Currently Offline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), React.createElement(WeatherSearch, {\n    performSearch: performSearch,\n    toggleLoading: toggleLoading,\n    isLoaded: weatherState.isLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), weatherState.isLoaded ? React.createElement(WeatherDetail, {\n    weatherState: weatherState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    className: \"weather-detail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n} // PropTypes\n\n\nWeatherCard.propTypes = {\n  weatherState: PropTypes.object.isRequired,\n  performSearch: PropTypes.func.isRequired,\n  toggleLoading: PropTypes.func.isRequired\n};\nexport default WeatherCard;","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\WeatherCard.js"],"names":["React","PropTypes","WeatherSearch","WeatherDetail","Message","Offline","WeatherCard","weatherState","performSearch","toggleLoading","isLoaded","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,OAAT,QAAwB,sBAAxB,C,CACA;;AAEA,SAASC,WAAT,OAAqE;AAAA,MAA9CC,YAA8C,QAA9CA,YAA8C;AAAA,MAAhCC,aAAgC,QAAhCA,aAAgC;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AACnE,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,oBAAC,aAAD;AACE,IAAA,aAAa,EAAED,aADjB;AAEE,IAAA,aAAa,EAAEC,aAFjB;AAGE,IAAA,QAAQ,EAAEF,YAAY,CAACG,QAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAUGH,YAAY,CAACG,QAAb,GACC,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAEH,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADF;AAkBD,C,CAED;;;AACAD,WAAW,CAACK,SAAZ,GAAwB;AACtBJ,EAAAA,YAAY,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UADT;AAEtBL,EAAAA,aAAa,EAAEP,SAAS,CAACa,IAAV,CAAeD,UAFR;AAGtBJ,EAAAA,aAAa,EAAER,SAAS,CAACa,IAAV,CAAeD;AAHR,CAAxB;AAMA,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Spring, config  } from 'react-spring/renderprops'\r\n// import { Card } from 'primereact/card';\r\nimport WeatherSearch from \"./WeatherSearch\";\r\nimport WeatherDetail from \"./WeatherDetail\";\r\nimport { Message } from \"primereact/message\";\r\nimport { Offline } from \"react-detect-offline\";\r\n// import {Panel} from 'primereact/panel';\r\n\r\nfunction WeatherCard({ weatherState, performSearch, toggleLoading }) {\r\n  return (\r\n    <div className=\"weather-card\">\r\n      <br />\r\n      <Offline>\r\n        <Message severity=\"warn\" text=\"Currently Offline\" />\r\n      </Offline>\r\n      <WeatherSearch\r\n        performSearch={performSearch}\r\n        toggleLoading={toggleLoading}\r\n        isLoaded={weatherState.isLoaded}\r\n      />\r\n      {weatherState.isLoaded ? (\r\n        <WeatherDetail weatherState={weatherState} />\r\n      ) : (\r\n        <div className=\"weather-detail\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// PropTypes\r\nWeatherCard.propTypes = {\r\n  weatherState: PropTypes.object.isRequired,\r\n  performSearch: PropTypes.func.isRequired,\r\n  toggleLoading: PropTypes.func.isRequired\r\n};\r\n\r\nexport default WeatherCard;\r\n"]},"metadata":{},"sourceType":"module"}