{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\MapCard.js\";\nimport React from 'react';\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\nimport PropTypes from 'prop-types'; // import marker from '../../assets/marker.png'\n\nimport Pin from './Pin';\nexport default function MapCard(_ref) {\n  var weatherState = _ref.weatherState,\n      setViewport = _ref.setViewport;\n  //Update Viewport From Search Props(Geocoder)\n  // componentDidUpdate() {\n  //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \n  //       && !this.props.weatherState.isLoading\n  //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\n  //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\n  //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\n  //   } \n  // }\n  // //Update Viewport From Scroll\n  // setPosition(latitude, longitude) {\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n  //   // this.props.setLatLon(latitude, longitude);\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n  //   // console.log('updating viewport from prop', this.state, latitude, longitude)\n  // }\n  // setViewport(viewport) {\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n  //   const { latitude, longitude } = viewport;\n  //   this.props.setLatLon(latitude, longitude);\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n  //   // console.log('updating viewport from map', this.state, latitude, longitude)\n  // }\n  // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\n  // let { weather } = this.props.weatherState;\n  // if(this.props.weatherState.isLoaded) {\n  //   position = [weather.latitude, weather.longitude];\n  //   // this.setPosition(position[0], position[1]);\n  // }     \n  // const mapOptions = { \n  //   showZoom: true,\n  //   showCompass: true\n  // };\n  return React.createElement(ReactMapGL, Object.assign({}, weatherState.viewport, {\n    width: \"75vw\",\n    height: \"60vh\" // scrollZoom={false}\n    // interactive={false}\n    // dragPan={false}\n    ,\n    onViewportChange: function onViewportChange(viewport) {\n      return setViewport(viewport);\n    },\n    mapStyle: \"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\",\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_KEY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      right: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(NavigationControl, {\n    onViewportChange: function onViewportChange(viewport) {\n      return setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Marker, {\n    latitude: weatherState.viewport.longitude,\n    longitude: weatherState.viewport.longitude,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Pin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n}\nMapCard.propTypes = {\n  setViewport: PropTypes.func.isRequired,\n  weatherState: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\MapCard.js"],"names":["React","ReactMapGL","Marker","NavigationControl","PropTypes","Pin","MapCard","weatherState","setViewport","viewport","process","env","REACT_APP_MAPBOX_KEY","position","right","longitude","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,iBAA7B,QAAsD,cAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,eAAe,SAASC,OAAT,OAAgD;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC7D;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACA,oBAAC,UAAD,oBACMD,YAAY,CAACE,QADnB;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,MAAM,EAAC,MAHT,CAIE;AACA;AACA;AANF;AAOE,IAAA,gBAAgB,EAAE,0BAACA,QAAD;AAAA,aAAcD,WAAW,CAACC,QAAD,CAAzB;AAAA,KAPpB;AAQE,IAAA,QAAQ,EAAC,uDARX;AASE,IAAA,oBAAoB,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBATpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AACE,IAAA,gBAAgB,EAAE,0BAACL,QAAD;AAAA,aAAcD,WAAW,CAACC,QAAD,CAAzB;AAAA,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXF,EAgBE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAGF,YAAY,CAACE,QAAb,CAAsBM,SADnC;AAEE,IAAA,SAAS,EAAGR,YAAY,CAACE,QAAb,CAAsBM,SAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAhBF,CADA;AA0BH;AAEDT,OAAO,CAACU,SAAR,GAAoB;AAClBR,EAAAA,WAAW,EAAEJ,SAAS,CAACa,IAAV,CAAeC,UADV;AAElBX,EAAAA,YAAY,EAAEH,SAAS,CAACe,MAAV,CAAiBD;AAFb,CAApB","sourcesContent":["import React from 'react';\r\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\r\nimport PropTypes from 'prop-types';\r\n// import marker from '../../assets/marker.png'\r\nimport Pin from './Pin'\r\n\r\nexport default function MapCard({ weatherState, setViewport }) {\r\n  //Update Viewport From Search Props(Geocoder)\r\n  // componentDidUpdate() {\r\n  //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \r\n  //       && !this.props.weatherState.isLoading\r\n  //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\r\n      \r\n  //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\r\n  //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\r\n  //   } \r\n  // }\r\n  // //Update Viewport From Scroll\r\n  // setPosition(latitude, longitude) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   // this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from prop', this.state, latitude, longitude)\r\n  // }\r\n\r\n  // setViewport(viewport) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   const { latitude, longitude } = viewport;\r\n  //   this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from map', this.state, latitude, longitude)\r\n  // }\r\n    \r\n \r\n    // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\r\n    // let { weather } = this.props.weatherState;\r\n    // if(this.props.weatherState.isLoaded) {\r\n    //   position = [weather.latitude, weather.longitude];\r\n    //   // this.setPosition(position[0], position[1]);\r\n    // }     \r\n    // const mapOptions = { \r\n    //   showZoom: true,\r\n    //   showCompass: true\r\n    // };\r\n    return (\r\n    <ReactMapGL\r\n      {...weatherState.viewport}\r\n      width=\"75vw\"\r\n      height=\"60vh\"\r\n      // scrollZoom={false}\r\n      // interactive={false}\r\n      // dragPan={false}\r\n      onViewportChange={(viewport) => setViewport(viewport)}\r\n      mapStyle=\"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\"\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\r\n    >\r\n      <div style={{position: 'absolute', right: 0}}>\r\n          <NavigationControl \r\n            onViewportChange={(viewport) => setViewport(viewport)}\r\n          />\r\n      </div>\r\n      <Marker \r\n        latitude= {weatherState.viewport.longitude}\r\n        longitude= {weatherState.viewport.longitude}\r\n      >\r\n        <Pin />\r\n        {/* <img src={marker} alt=\"NOTHING\"/> */}\r\n      </Marker>\r\n    </ReactMapGL>\r\n  )  \r\n}\r\n\r\nMapCard.propTypes = {\r\n  setViewport: PropTypes.func.isRequired,\r\n  weatherState: PropTypes.object.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}