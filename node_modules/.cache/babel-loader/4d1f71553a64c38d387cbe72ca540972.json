{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\WeatherDetail.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactAnimatedWeather from 'react-animated-weather'; // import { Transition, animated } from 'react-spring/renderprops';\n// import {  CSSTransition, TransitionGroup  } from 'react-transition-group';\n// import './../../App.css';\n\nfunction WeatherDetail(_ref) {\n  var weatherState = _ref.weatherState;\n  var defaults = {\n    color: 'cadetblue',\n    size: 50,\n    animate: true\n  };\n  var _weatherState$weather = weatherState.weather.currently,\n      temperature = _weatherState$weather.temperature,\n      icon = _weatherState$weather.icon,\n      summary = _weatherState$weather.summary;\n  var isLoading = weatherState.isLoading; // const detail = () => { return (\n  //   <div style={{ display : 'flex', flexDirection: 'column' }}>\n  //         {(!this.props.weatherState.isLoading) ?\n  //         <div style={{ display : 'flex' }}>\n  //           <h3 style={{flex: '3'}} >{Math.round(temperature)}°C </h3>\n  //             <h3 style={{flex: '3'}} >{summary}</h3>\n  //             <div style={{flex: '3'}} >\n  //                 <ReactAnimatedWeather\n  //                 icon={icon.replace(/-/g, \"_\").toUpperCase()}\n  //                 color={this.defaults.color}\n  //                 size={this.defaults.size}\n  //                 animate={this.defaults.animate}\n  //               /> \n  //           </div>\n  //           </div> : \n  //           <h3>Loading...</h3>\n  //         }\n  //     </div>\n  //   ) };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, !isLoading ? React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyItems: 'center',\n      textAlign: 'center',\n      maxWidth: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    style: {\n      flex: '3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, Math.round(temperature), \"\\xB0C \"), React.createElement(\"h3\", {\n    style: {\n      flex: '3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, summary), React.createElement(\"div\", {\n    style: {\n      flex: '3'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ReactAnimatedWeather, {\n    icon: icon.replace(/-/g, \"_\").toUpperCase(),\n    color: defaults.color,\n    size: defaults.size,\n    animate: defaults.animate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Loading...\")));\n} // PropTypes\n\n\nWeatherDetail.propTypes = {\n  weatherState: PropTypes.object.isRequired\n};\nexport default WeatherDetail;","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\WeatherDetail.js"],"names":["React","PropTypes","ReactAnimatedWeather","WeatherDetail","weatherState","defaults","color","size","animate","weather","currently","temperature","icon","summary","isLoading","display","justifyItems","textAlign","maxWidth","flex","Math","round","replace","toUpperCase","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC,C,CACA;AACA;AACA;;AACA,SAASC,aAAT,OAAuC;AAAA,MAAfC,YAAe,QAAfA,YAAe;AAEtC,MAAMC,QAAQ,GAAG;AACdC,IAAAA,KAAK,EAAE,WADO;AAEdC,IAAAA,IAAI,EAAE,EAFQ;AAGdC,IAAAA,OAAO,EAAE;AAHK,GAAjB;AAFsC,8BASAJ,YAAY,CAACK,OAAb,CAAqBC,SATrB;AAAA,MAS9BC,WAT8B,yBAS9BA,WAT8B;AAAA,MASjBC,IATiB,yBASjBA,IATiB;AAAA,MASXC,OATW,yBASXA,OATW;AAUrC,MAAMC,SAAS,GAAGV,YAAY,CAACU,SAA/B,CAVqC,CAWrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAACA,SAAF,GACD;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAG,MAAZ;AAAoBC,MAAAA,YAAY,EAAE,QAAlC;AAA4CC,MAAAA,SAAS,EAAE,QAAvD;AAAiEC,MAAAA,QAAQ,EAAE;AAA3E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,IAAI,CAACC,KAAL,CAAWV,WAAX,CAA1B,WADF,EAEE;AAAI,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAE;AAAP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BN,OAA1B,CAFF,EAGE;AACE,IAAA,KAAK,EAAE;AAACM,MAAAA,IAAI,EAAE;AAAP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,oBAAD;AACE,IAAA,IAAI,EAAEP,IAAI,CAACU,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwBC,WAAxB,EADR;AAEE,IAAA,KAAK,EAAElB,QAAQ,CAACC,KAFlB;AAGE,IAAA,IAAI,EAAED,QAAQ,CAACE,IAHjB;AAIE,IAAA,OAAO,EAAEF,QAAQ,CAACG,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADC,GAcC;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArC,CAfJ,CADF;AAoBD,C,CAEH;;;AACAd,aAAa,CAACqB,SAAd,GAA0B;AACxBpB,EAAAA,YAAY,EAAEH,SAAS,CAACwB,MAAV,CAAiBC;AADP,CAA1B;AAIA,eAAevB,aAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n// import { Transition, animated } from 'react-spring/renderprops';\r\n// import {  CSSTransition, TransitionGroup  } from 'react-transition-group';\r\n// import './../../App.css';\r\nfunction WeatherDetail({weatherState}) {\r\n\r\n const defaults = {\r\n    color: 'cadetblue',\r\n    size: 50,\r\n    animate: true\r\n  };\r\n  \r\n\r\n  const {temperature, icon, summary} = weatherState.weather.currently;\r\n  const isLoading = weatherState.isLoading;\r\n  // const detail = () => { return (\r\n  //   <div style={{ display : 'flex', flexDirection: 'column' }}>\r\n  //         {(!this.props.weatherState.isLoading) ?\r\n  //         <div style={{ display : 'flex' }}>\r\n  //           <h3 style={{flex: '3'}} >{Math.round(temperature)}°C </h3>\r\n  //             <h3 style={{flex: '3'}} >{summary}</h3>\r\n  //             <div style={{flex: '3'}} >\r\n  //                 <ReactAnimatedWeather\r\n  //                 icon={icon.replace(/-/g, \"_\").toUpperCase()}\r\n  //                 color={this.defaults.color}\r\n  //                 size={this.defaults.size}\r\n  //                 animate={this.defaults.animate}\r\n  //               /> \r\n  //           </div>\r\n  //           </div> : \r\n  //           <h3>Loading...</h3>\r\n  //         }\r\n  //     </div>\r\n  //   ) };\r\n    return (    \r\n      <React.Fragment>\r\n        {(!isLoading) ?\r\n        <div style={{ display : 'flex', justifyItems: 'center', textAlign: 'center', maxWidth: '500px' }}>\r\n          <h3 style={{flex: '3'}} >{Math.round(temperature)}°C </h3>\r\n          <h3 style={{flex: '3'}} >{summary}</h3>\r\n          <div \r\n            style={{flex: '3'}}>\r\n            <ReactAnimatedWeather \r\n              icon={icon.replace(/-/g, \"_\").toUpperCase()}\r\n              color={defaults.color}\r\n              size={defaults.size}\r\n              animate={defaults.animate}\r\n            />\r\n          </div>\r\n        </div> \r\n        : <div style={{ textAlign: 'center' }}><h3>Loading...</h3></div>\r\n        }\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n// PropTypes\r\nWeatherDetail.propTypes = {\r\n  weatherState: PropTypes.object.isRequired\r\n  }\r\n\r\nexport default WeatherDetail;"]},"metadata":{},"sourceType":"module"}