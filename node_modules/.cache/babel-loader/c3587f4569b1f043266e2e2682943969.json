{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\MapCard.js\";\nimport React, { Component } from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nvar MapCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapCard, _Component);\n\n  function MapCard(props) {\n    var _this;\n\n    _classCallCheck(this, MapCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapCard).call(this, props));\n    _this.state = {\n      viewport: {\n        latitude: 12.9791198,\n        longitude: 77.5912997\n      }\n    };\n    state = {\n      viewport: {\n        latitude: 12.9791198,\n        longitude: 77.5912997\n      }\n    };\n    return _this;\n  }\n\n  _createClass(MapCard, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      console.log('weatherstate map', this.props, this.state);\n\n      if (prevProps.weatherState.weather.latitude !== this.state.viewport.latitude && !prevProps.weatherState.isLoading) {\n        this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\n      }\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(lat, lon) {\n      // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n      console.log('updating viewport from prop');\n      this.setState({\n        viewport: {\n          latitude: lat,\n          longitude: lon\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var position = [this.state.viewport.latitude, this.state.viewport.longitude]; // let { weather } = this.props.weatherState;\n      // if(this.props.weatherState.isLoaded) {\n      //   position = [weather.latitude, weather.longitude];\n      //   // this.setPosition(position[0], position[1]);\n      // } \n\n      return React.createElement(ReactMapGL, {\n        latitude: position[0],\n        longitude: position[1],\n        zoom: 10,\n        width: \"75vw\",\n        height: \"60vh\",\n        interactive: false,\n        dragPan: false,\n        onViewportChange: function onViewportChange(viewport) {\n          return _this2.setState({\n            viewport: viewport\n          });\n        },\n        mapStyle: \"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\",\n        mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_KEY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        latitude: position[0],\n        longitude: position[1],\n        draggable: false,\n        offsetTop: -25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://img.icons8.com/color/32/000000/marker.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapCard;\n}(Component);\n\nexport { MapCard as default };","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\MapCard.js"],"names":["React","Component","ReactMapGL","Marker","MapCard","props","state","viewport","latitude","longitude","prevProps","console","log","weatherState","weather","isLoading","setPosition","lat","lon","setState","position","process","env","REACT_APP_MAPBOX_KEY"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;;IAEqBC,O;;;;;AAEnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AADiB,UAUrBC,KAVqB,GAUb;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,UADF;AAERC,QAAAA,SAAS,EAAE;AAFH;AADJ,KAVa;AAEjBH,IAAAA,KAAK,GAAG;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,UADF;AAERC,QAAAA,SAAS,EAAE;AAFH;AADJ,KAAR;AAFiB;AAQpB;;;;uCASoBC,S,EAAW;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKP,KAArC,EAA4C,KAAKC,KAAjD;;AACA,UAAGI,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BN,QAA/B,KAA4C,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,QAAhE,IAA4E,CAACE,SAAS,CAACG,YAAV,CAAuBE,SAAvG,EAAkH;AAChH,aAAKC,WAAL,CAAiB,KAAKX,KAAL,CAAWQ,YAAX,CAAwBC,OAAxB,CAAgCN,QAAjD,EAA2D,KAAKH,KAAL,CAAWQ,YAAX,CAAwBC,OAAxB,CAAgCL,SAA3F;AACD;AACF;;;gCAEWQ,G,EAAKC,G,EAAK;AACpB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,WAAKO,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAAE;AAACC,UAAAA,QAAQ,EAACS,GAAV;AAAeR,UAAAA,SAAS,EAACS;AAAzB;AAAX,OAAd;AACC;;;6BAEI;AAAA;;AACL,UAAIE,QAAQ,GAAG,CAAC,KAAKd,KAAL,CAAWC,QAAX,CAAoBC,QAArB,EAA+B,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,SAAnD,CAAf,CADK,CAEL;AACA;AACA;AACA;AACA;;AACA,aACA,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAGW,QAAQ,CAAC,CAAD,CADrB;AAEE,QAAA,SAAS,EAAGA,QAAQ,CAAC,CAAD,CAFtB;AAGE,QAAA,IAAI,EAAE,EAHR;AAIE,QAAA,KAAK,EAAC,MAJR;AAKE,QAAA,MAAM,EAAC,MALT;AAME,QAAA,WAAW,EAAE,KANf;AAOE,QAAA,OAAO,EAAE,KAPX;AAQE,QAAA,gBAAgB,EAAE,0BAACb,QAAD;AAAA,iBAAc,MAAI,CAACY,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA,SARpB;AASE,QAAA,QAAQ,EAAC,uDATX;AAUE,QAAA,oBAAoB,EAAEc,OAAO,CAACC,GAAR,CAAYC,oBAVpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAGH,QAAQ,CAAC,CAAD,CADrB;AAEE,QAAA,SAAS,EAAGA,QAAQ,CAAC,CAAD,CAFtB;AAGE,QAAA,SAAS,EAAG,KAHd;AAIE,QAAA,SAAS,EAAG,CAAC,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAK,QAAA,GAAG,EAAC,mDAAT;AAA6D,QAAA,GAAG,EAAC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAZF,CADA;AAuBF;;;;EA9DmCnB,S;;SAAhBG,O","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\n\r\nexport default class MapCard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    state = {\r\n      viewport: {\r\n        latitude: 12.9791198,\r\n        longitude: 77.5912997\r\n      }\r\n  }\r\n}\r\n\r\nstate = {\r\n  viewport: {\r\n    latitude: 12.9791198,\r\n    longitude: 77.5912997\r\n  }\r\n}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log('weatherstate map', this.props, this.state);\r\n    if(prevProps.weatherState.weather.latitude !== this.state.viewport.latitude && !prevProps.weatherState.isLoading) {\r\n      this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\r\n    } \r\n  }\r\n\r\n  setPosition(lat, lon) {\r\n    // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n    console.log('updating viewport from prop');\r\n    this.setState({viewport: {latitude:lat, longitude:lon}});\r\n    }\r\n    \r\n render(){ \r\n    let position = [this.state.viewport.latitude, this.state.viewport.longitude];\r\n    // let { weather } = this.props.weatherState;\r\n    // if(this.props.weatherState.isLoaded) {\r\n    //   position = [weather.latitude, weather.longitude];\r\n    //   // this.setPosition(position[0], position[1]);\r\n    // } \r\n    return (\r\n    <ReactMapGL\r\n      latitude= {position[0]}\r\n      longitude= {position[1]}\r\n      zoom={10}\r\n      width=\"75vw\"\r\n      height=\"60vh\"\r\n      interactive={false}\r\n      dragPan={false}\r\n      onViewportChange={(viewport) => this.setState({viewport})}\r\n      mapStyle=\"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\"\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\r\n    >\r\n      <Marker \r\n        latitude= {position[0]}\r\n        longitude= {position[1]}\r\n        draggable= {false}\r\n        offsetTop= {-25}\r\n      >\r\n        <img src=\"https://img.icons8.com/color/32/000000/marker.png\" alt=\"\"/>\r\n      </Marker>\r\n    </ReactMapGL>\r\n  )\r\n }\r\n}"]},"metadata":{},"sourceType":"module"}