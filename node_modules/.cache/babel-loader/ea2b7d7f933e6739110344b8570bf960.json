{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\MapCard.js\";\nimport React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport PropTypes from 'prop-types';\nexport default function MapCard(_ref) {\n  var weatherState = _ref.weatherState,\n      setViewport = _ref.setViewport;\n  //Update Viewport From Search Props(Geocoder)\n  // componentDidUpdate() {\n  //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \n  //       && !this.props.weatherState.isLoading\n  //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\n  //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\n  //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\n  //   } \n  // }\n  // //Update Viewport From Scroll\n  // setPosition(latitude, longitude) {\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n  //   // this.props.setLatLon(latitude, longitude);\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n  //   // console.log('updating viewport from prop', this.state, latitude, longitude)\n  // }\n  // setViewport(viewport) {\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\n  //   const { latitude, longitude } = viewport;\n  //   this.props.setLatLon(latitude, longitude);\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\n  //   // console.log('updating viewport from map', this.state, latitude, longitude)\n  // }\n  // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\n  // let { weather } = this.props.weatherState;\n  // if(this.props.weatherState.isLoaded) {\n  //   position = [weather.latitude, weather.longitude];\n  //   // this.setPosition(position[0], position[1]);\n  // } \n  return React.createElement(ReactMapGL, {\n    latitude: weatherState.viewport.latitude,\n    longitude: weatherState.viewport.longitude,\n    zoom: 10,\n    width: \"75vw\",\n    height: \"60vh\" // scrollZoom={true}\n    // interactive={true}\n    // dragPan={true}\n    ,\n    onViewportChange: function onViewportChange(viewport) {\n      return setViewport(viewport);\n    },\n    mapStyle: \"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\",\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_KEY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Marker, {\n    latitude: weatherState.viewport.longitude,\n    longitude: weatherState.viewport.longitude,\n    draggable: true,\n    offsetTop: -25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"%PUBLIC_URL%/marker.png\",\n    alt: \"NOTHING\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\nMapCard.propTypes = {\n  setViewport: PropTypes.func.isRequired,\n  weatherState: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\MapCard.js"],"names":["React","ReactMapGL","Marker","PropTypes","MapCard","weatherState","setViewport","viewport","latitude","longitude","process","env","REACT_APP_MAPBOX_KEY","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,OAAT,OAAgD;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC7D;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA,SACA,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAED,YAAY,CAACE,QAAb,CAAsBC,QADlC;AAEE,IAAA,SAAS,EAAEH,YAAY,CAACE,QAAb,CAAsBE,SAFnC;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC,MALT,CAME;AACA;AACA;AARF;AASE,IAAA,gBAAgB,EAAE,0BAACF,QAAD;AAAA,aAAcD,WAAW,CAACC,QAAD,CAAzB;AAAA,KATpB;AAUE,IAAA,QAAQ,EAAC,uDAVX;AAWE,IAAA,oBAAoB,EAAEG,OAAO,CAACC,GAAR,CAAYC,oBAXpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAGP,YAAY,CAACE,QAAb,CAAsBE,SADnC;AAEE,IAAA,SAAS,EAAGJ,YAAY,CAACE,QAAb,CAAsBE,SAFpC;AAGE,IAAA,SAAS,EAAG,IAHd;AAIE,IAAA,SAAS,EAAG,CAAC,EAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAC,yBAAT;AAAmC,IAAA,GAAG,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAbF,CADA;AAyBH;AAEDL,OAAO,CAACS,SAAR,GAAoB;AAClBP,EAAAA,WAAW,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADV;AAElBV,EAAAA,YAAY,EAAEF,SAAS,CAACa,MAAV,CAAiBD;AAFb,CAApB","sourcesContent":["import React from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function MapCard({ weatherState, setViewport }) {\r\n  //Update Viewport From Search Props(Geocoder)\r\n  // componentDidUpdate() {\r\n  //   if(this.props.weatherState.weather.latitude !== this.state.viewport.latitude \r\n  //       && !this.props.weatherState.isLoading\r\n  //       && typeof this.props.weatherState.weather.latitude !== 'undefined') {\r\n      \r\n  //     // console.log('weatherstate map', this.props, this.state.viewport.latitude);\r\n  //     this.setPosition(this.props.weatherState.weather.latitude, this.props.weatherState.weather.longitude);\r\n  //   } \r\n  // }\r\n  // //Update Viewport From Scroll\r\n  // setPosition(latitude, longitude) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   // this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from prop', this.state, latitude, longitude)\r\n  // }\r\n\r\n  // setViewport(viewport) {\r\n  //   // const viewport = {...this.state.viewport, longitude: lat, latitude: lon};\r\n  //   const { latitude, longitude } = viewport;\r\n  //   this.props.setLatLon(latitude, longitude);\r\n  //   this.setState({ ...this.state, viewport:{...this.state.viewport, latitude:latitude, longitude:longitude}});\r\n  //   // console.log('updating viewport from map', this.state, latitude, longitude)\r\n  // }\r\n    \r\n \r\n    // let position = [this.state.viewport.latitude, this.state.viewport.longitude];\r\n    // let { weather } = this.props.weatherState;\r\n    // if(this.props.weatherState.isLoaded) {\r\n    //   position = [weather.latitude, weather.longitude];\r\n    //   // this.setPosition(position[0], position[1]);\r\n    // } \r\n    return (\r\n    <ReactMapGL\r\n      latitude={weatherState.viewport.latitude}\r\n      longitude={weatherState.viewport.longitude}\r\n      zoom={10}\r\n      width=\"75vw\"\r\n      height=\"60vh\"\r\n      // scrollZoom={true}\r\n      // interactive={true}\r\n      // dragPan={true}\r\n      onViewportChange={(viewport) => setViewport(viewport)}\r\n      mapStyle=\"mapbox://styles/redvelocity/cjumbtame019l1ft8zigwi1cd\"\r\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\r\n    >\r\n      <Marker \r\n        latitude= {weatherState.viewport.longitude}\r\n        longitude= {weatherState.viewport.longitude}\r\n        draggable= {true}\r\n        offsetTop= {-25}\r\n      >\r\n        <img src=\"%PUBLIC_URL%/marker.png\" alt=\"NOTHING\"/>\r\n      </Marker>\r\n    </ReactMapGL>\r\n  )\r\n  \r\n}\r\n\r\nMapCard.propTypes = {\r\n  setViewport: PropTypes.func.isRequired,\r\n  weatherState: PropTypes.object.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}