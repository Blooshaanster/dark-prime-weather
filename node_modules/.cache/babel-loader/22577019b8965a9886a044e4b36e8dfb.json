{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahnkha\\\\Documents\\\\GIT Apps\\\\dark-prime-weather-apo\\\\src\\\\components\\\\layout\\\\WeatherChart.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Chart } from 'primereact/chart';\nimport Media from 'react-media';\n\nfunction WeatherChart(_ref) {\n  var weatherState = _ref.weatherState;\n  var daily = null;\n  var data = null; // console.log('chart props', weather, isLoaded);\n\n  if (weatherState.isLoaded && !weatherState.isLoading) {\n    daily = weatherState.weather.daily; // console.log('daily', daily);\n\n    data = {\n      labels: daily.data.map(function (daily) {\n        return moment.unix(daily.time).format('ddd DD/MM');\n      }),\n      datasets: [{\n        label: 'Temperature High',\n        data: daily.data.map(function (daily) {\n          return daily.apparentTemperatureHigh;\n        }),\n        fill: false,\n        backgroundColor: '#f7a800',\n        borderColor: '#f7a800'\n      }, {\n        label: 'Temperature Low',\n        data: daily.data.map(function (daily) {\n          return daily.apparentTemperatureLow;\n        }),\n        fill: false,\n        backgroundColor: '#42A5F5',\n        borderColor: '#42A5F5'\n      }]\n    }; // console.log('data', data);\n  }\n\n  return data !== null ? React.createElement(Media, {\n    query: \"(max-width: 500px)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, function (matches) {\n    return matches ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      type: \"line\",\n      data: data,\n      width: \"380px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      type: \"line\",\n      data: data,\n      width: \"500px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }, \" >\") : null;\n}\n\nexport default WeatherChart;","map":{"version":3,"sources":["C:\\Users\\shahnkha\\Documents\\GIT Apps\\dark-prime-weather-apo\\src\\components\\layout\\WeatherChart.js"],"names":["React","moment","Chart","Media","WeatherChart","weatherState","daily","data","isLoaded","isLoading","weather","labels","map","unix","time","format","datasets","label","apparentTemperatureHigh","fill","backgroundColor","borderColor","apparentTemperatureLow","matches"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,SAASC,YAAT,OAAwC;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AAEpC,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAIC,IAAI,GAAG,IAAX,CAHoC,CAIpC;;AACA,MAAGF,YAAY,CAACG,QAAb,IAAyB,CAACH,YAAY,CAACI,SAA1C,EAAqD;AACjDH,IAAAA,KAAK,GAAGD,YAAY,CAACK,OAAb,CAAqBJ,KAA7B,CADiD,CAEjD;;AACAC,IAAAA,IAAI,GAAG;AACPI,MAAAA,MAAM,EAAEL,KAAK,CAACC,IAAN,CAAWK,GAAX,CAAe,UAACN,KAAD;AAAA,eAAWL,MAAM,CAACY,IAAP,CAAYP,KAAK,CAACQ,IAAlB,EAAwBC,MAAxB,CAA+B,WAA/B,CAAX;AAAA,OAAf,CADD;AAEPC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,KAAK,EAAE,kBADX;AAEIV,QAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWK,GAAX,CAAe,UAACN,KAAD;AAAA,iBAAWA,KAAK,CAACY,uBAAjB;AAAA,SAAf,CAFV;AAGIC,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,eAAe,EAAE,SAJrB;AAKIC,QAAAA,WAAW,EAAE;AALjB,OADM,EAQN;AACIJ,QAAAA,KAAK,EAAE,iBADX;AAEIV,QAAAA,IAAI,EAAED,KAAK,CAACC,IAAN,CAAWK,GAAX,CAAe,UAACN,KAAD;AAAA,iBAAWA,KAAK,CAACgB,sBAAjB;AAAA,SAAf,CAFV;AAGIH,QAAAA,IAAI,EAAE,KAHV;AAIIC,QAAAA,eAAe,EAAE,SAJrB;AAKIC,QAAAA,WAAW,EAAE;AALjB,OARM;AAFH,KAAP,CAHiD,CAsBrD;AACD;;AACD,SACGd,IAAI,KAAK,IAAV,GACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAC,oBADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,UAAAgB,OAAO;AAAA,WACFA,OAAO,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAEhB,IAAzB;AAA+B,MAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADO,GAKP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAEA,IAAzB;AAA+B,MAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANE;AAAA,GAFT,OADD,GAcY,IAfd;AAiBD;;AAED,eAAeH,YAAf","sourcesContent":["import React from 'react'\r\nimport moment from 'moment';\r\nimport {Chart} from 'primereact/chart';\r\nimport Media from 'react-media';\r\n\r\nfunction WeatherChart( {weatherState} ) {\r\n\r\n    let daily = null;\r\n    let data = null;\r\n    // console.log('chart props', weather, isLoaded);\r\n    if(weatherState.isLoaded && !weatherState.isLoading) {\r\n        daily = weatherState.weather.daily;\r\n        // console.log('daily', daily);\r\n        data = {\r\n        labels: daily.data.map((daily) => moment.unix(daily.time).format('ddd DD/MM')),\r\n        datasets: [\r\n            {\r\n                label: 'Temperature High',\r\n                data: daily.data.map((daily) => daily.apparentTemperatureHigh),\r\n                fill: false,\r\n                backgroundColor: '#f7a800',\r\n                borderColor: '#f7a800'  \r\n            },\r\n            {\r\n                label: 'Temperature Low',\r\n                data: daily.data.map((daily) => daily.apparentTemperatureLow),\r\n                fill: false,\r\n                backgroundColor: '#42A5F5',\r\n                borderColor: '#42A5F5'\r\n            }\r\n        ]   \r\n    };\r\n    // console.log('data', data);\r\n  }\r\n  return (\r\n    (data !== null) ?\r\n    (<Media \r\n      query=\"(max-width: 500px)\">\r\n      {matches =>\r\n            matches ? (              \r\n            <div>      \r\n              <Chart type=\"line\" data={data} width=\"380px\" />\r\n            </div>\r\n            ) : (\r\n            <div>      \r\n              <Chart type=\"line\" data={data} width=\"500px\" />\r\n            </div>\r\n            )\r\n          } >\r\n    </Media>) : null\r\n  )\r\n}\r\n\r\nexport default WeatherChart;"]},"metadata":{},"sourceType":"module"}